name: Built and Test

on:
  push:
    branches: main
  pull_request:
    branches: main,

jobs:
  build-and-test:
    name: Build & Test ${{ matrix.project }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project: server
            path: apps/server
          - project: web
            path: apps/web
    defaults:
      run:
        working-directory: ${{ matrix.path }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Check Formatting
        run: bun run check-format

      - name: Check Lint
        run: bun run check-lint

      - name: Build ${{ matrix.project }}
        run: bun run build

      - name: Test ${{ matrix.project }}
        run: bun run test
  # deploy-spa:
  #   name: Deploy SPA
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Install Bun
  #       uses: oven-sh/setup-bun@v1
  #     - name: Build SPA
  #       run: |
  #         cd apps/web
  #         bun install
  #         bun run build
  #
  #     - name: Setup AWS CLI
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/AndrosePazaakGitHubActions
  #         aws-region: ap-southeast-2
  #
  #     - name: Sync files to S3 bucket
  #       run: |
  #         aws s3 sync apps/web/dist s3://androse-pazaak-bucket --delete
  #
  #     - name: Invalidate CloudFront cache
  #       run: |
  #         aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  deploy-server:
    name: Deploy Server
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
      - name: Build Server
        run: |
          cd apps/server
          bun install
          bun run build
      - name: Deploy to remote server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          key: ${{ secrets.REMOTE_SERVER_SSH_KEY }}
          source: 'apps/server/dist/index.js'
          target: 'index.js'
      - name: Restart server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          key: ${{ secrets.REMOTE_SERVER_SSH_KEY }}
          script: |
            pm2 reload pazaak-server || pm2 start bun --name pazaak-server -- run index.js
