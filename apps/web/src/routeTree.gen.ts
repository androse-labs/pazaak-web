/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as HowToPlayIndexImport } from './routes/how-to-play/index'
import { Route as DeckBuilderIndexImport } from './routes/deck-builder/index'
import { Route as MatchMatchIdIndexImport } from './routes/match/$matchId/index'
import { Route as MatchMatchIdJoinImport } from './routes/match/$matchId/join'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HowToPlayIndexRoute = HowToPlayIndexImport.update({
  id: '/how-to-play/',
  path: '/how-to-play/',
  getParentRoute: () => rootRoute,
} as any)

const DeckBuilderIndexRoute = DeckBuilderIndexImport.update({
  id: '/deck-builder/',
  path: '/deck-builder/',
  getParentRoute: () => rootRoute,
} as any)

const MatchMatchIdIndexRoute = MatchMatchIdIndexImport.update({
  id: '/match/$matchId/',
  path: '/match/$matchId/',
  getParentRoute: () => rootRoute,
} as any)

const MatchMatchIdJoinRoute = MatchMatchIdJoinImport.update({
  id: '/match/$matchId/join',
  path: '/match/$matchId/join',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/deck-builder/': {
      id: '/deck-builder/'
      path: '/deck-builder'
      fullPath: '/deck-builder'
      preLoaderRoute: typeof DeckBuilderIndexImport
      parentRoute: typeof rootRoute
    }
    '/how-to-play/': {
      id: '/how-to-play/'
      path: '/how-to-play'
      fullPath: '/how-to-play'
      preLoaderRoute: typeof HowToPlayIndexImport
      parentRoute: typeof rootRoute
    }
    '/match/$matchId/join': {
      id: '/match/$matchId/join'
      path: '/match/$matchId/join'
      fullPath: '/match/$matchId/join'
      preLoaderRoute: typeof MatchMatchIdJoinImport
      parentRoute: typeof rootRoute
    }
    '/match/$matchId/': {
      id: '/match/$matchId/'
      path: '/match/$matchId'
      fullPath: '/match/$matchId'
      preLoaderRoute: typeof MatchMatchIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/deck-builder': typeof DeckBuilderIndexRoute
  '/how-to-play': typeof HowToPlayIndexRoute
  '/match/$matchId/join': typeof MatchMatchIdJoinRoute
  '/match/$matchId': typeof MatchMatchIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/deck-builder': typeof DeckBuilderIndexRoute
  '/how-to-play': typeof HowToPlayIndexRoute
  '/match/$matchId/join': typeof MatchMatchIdJoinRoute
  '/match/$matchId': typeof MatchMatchIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/deck-builder/': typeof DeckBuilderIndexRoute
  '/how-to-play/': typeof HowToPlayIndexRoute
  '/match/$matchId/join': typeof MatchMatchIdJoinRoute
  '/match/$matchId/': typeof MatchMatchIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/deck-builder'
    | '/how-to-play'
    | '/match/$matchId/join'
    | '/match/$matchId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/deck-builder'
    | '/how-to-play'
    | '/match/$matchId/join'
    | '/match/$matchId'
  id:
    | '__root__'
    | '/'
    | '/deck-builder/'
    | '/how-to-play/'
    | '/match/$matchId/join'
    | '/match/$matchId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DeckBuilderIndexRoute: typeof DeckBuilderIndexRoute
  HowToPlayIndexRoute: typeof HowToPlayIndexRoute
  MatchMatchIdJoinRoute: typeof MatchMatchIdJoinRoute
  MatchMatchIdIndexRoute: typeof MatchMatchIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DeckBuilderIndexRoute: DeckBuilderIndexRoute,
  HowToPlayIndexRoute: HowToPlayIndexRoute,
  MatchMatchIdJoinRoute: MatchMatchIdJoinRoute,
  MatchMatchIdIndexRoute: MatchMatchIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/deck-builder/",
        "/how-to-play/",
        "/match/$matchId/join",
        "/match/$matchId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/deck-builder/": {
      "filePath": "deck-builder/index.tsx"
    },
    "/how-to-play/": {
      "filePath": "how-to-play/index.tsx"
    },
    "/match/$matchId/join": {
      "filePath": "match/$matchId/join.tsx"
    },
    "/match/$matchId/": {
      "filePath": "match/$matchId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
